"""
This type stub file was generated by pyright.
"""

from enum import Enum

class _SharedPropertyFunctions:
    def __init__(self, root_element) -> None: ...
    def add_macro(self, name, val, root_elem=...):  # -> None:
        ...
    def generic_property(self, root_element, prop_type, val=...):  # -> None:
        ...
    def list_property(self, root_element, prop_type, val=...):  # -> None:
        ...
    def integer_property(self, root_element, prop_type, val):  # -> None:
        ...
    def number_property(self, root_element, prop_type, val):  # -> None:
        ...
    def boolean_property(self, root_element, prop_type, val):  # -> None:
        ...
    def create_element(self, root_element, prop_type, val=...):  # -> Element[Any]:
        ...
    def create_list_element(self, prop_type, val=...):  # -> Element[Any]:
        ...
    def valid_rgb_value(self, val):  # -> bool:
        ...
    def create_color_element(
        self, root_color_elem, name, red, green, blue, alpha, add_to_root=...
    ):  # -> None:
        ...
    def get_font_element(self, root_elem, font_elem_name):  # -> Element[str]:
        ...
    def add_font_style(self, root_elem, font_elem_name, val):  # -> None:
        ...
    def create_named_font_element(self, root_elem, font_elem_name, name):  # -> None:
        ...

    class FontStyle(Enum):
        regular = ...
        italic = ...
        bold = ...
        bold_and_italic = ...

    class HorizontalAlignment(Enum):
        left = ...
        center = ...
        right = ...

    class VerticalAlignment(Enum):
        top = ...
        middle = ...
        bottom = ...

    class RotationStep(Enum):
        zero = ...
        ninety = ...
        one_hundred_eighty = ...
        negative_ninety = ...

    class Mode(Enum):
        toggle = ...
        push = ...
        push_inverted = ...

    class Interpolation(Enum):
        none = ...
        interpolate = ...
        automatic = ...

    class ColorMode(Enum):
        TYPE_CUSTOM = ...
        TYPE_MONO = ...
        TYPE_BAYER = ...
        TYPE_RGB1 = ...
        TYPE_RGB2 = ...
        TYPE_RGB3 = ...
        TYPE_YUV444 = ...
        TYPE_YUV422 = ...
        TYPE_YUV411 = ...
        TYPE_3BYTE_BGR = ...
        TYPE_4BYTE_ABGR = ...
        TYPE_4BYTE_ABGR_PRE = ...
        TYPE_BYTE_BINARY = ...
        TYPE_BYTE_GRAY = ...
        TYPE_BYTE_INDEXED = ...
        TYPE_INT_ARGB = ...
        TYPE_INT_ARGB_PRE = ...
        TYPE_INT_BGR = ...
        TYPE_INT_RGB = ...
        TYPE_USHORT_555_RGB = ...
        TYPE_USHORT_565_RGB = ...
        TYPE_USHORT_GRAY = ...

    class GroupStyle(Enum):
        group_box = ...
        title_bar = ...
        line = ...
        none = ...

    class Resize(Enum):
        no_resize = ...
        size_content_to_fit_widget = ...
        size_widget_to_match_content = ...
        stretch_content_to_fit_widget = ...
        crop_content = ...

    class FileComponent(Enum):
        full_path = ...
        directory = ...
        name_and_extension = ...
        base_name = ...

    class TraceType(Enum):
        none = ...
        line = ...
        step = ...
        err_bars = ...
        line_err_bars = ...
        bars = ...

    class LineStyle(Enum):
        solid = ...
        dashed = ...
        dot = ...
        dash_dot = ...
        dash_dot_dot = ...

    class PointType(Enum):
        none = ...
        squares = ...
        circles = ...
        diamonds = ...
        x = ...
        triangles = ...

    class ColorMap(Enum):
        viridis = ...
        grayscale = ...
        jet = ...
        color_spectrum = ...
        hot = ...
        cool = ...
        shaded = ...
        magma = ...
